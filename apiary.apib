FORMAT: 1A
HOST: http://ed2016.vts.it/

# ED

Service Oriented Architecture specified for the ED project.


#######################
# Group Profiles
#######################

Resources related to user's profile in the API.

## Profiles collections [/profiles]

+ Attributes (object)
    + results (array[Profile1, Profile2, Profile3], required) - array of profiles
    + Include PaginationData

### List Profiles [GET /profiles{?searchQuery,page,pageSize,sort,sortOrder,report}]
Search user profiles.

Takes a `searchQuery` parameter object defined as follows
  + revision (required,number) - numeric id of the revision
  + revisionstrict (optional,boolean) - filter only profiles linked to the revision
  + lname (optional,String) - last name
  + fname (optional,String) - fist name
  + email (optional,String) - email
  + dcode (optional,String) - department code
  + dname (optional,String) - department name
  + emptype (optional,String) - employee type code
  + profession (optional, string) - profession description
  + manager (optional,boolean) - filters only managers (**my report**)
  + emptype (optional,array[string]) - array of employee types (**my report**)
  + location (optional,number) - location id (**my report**)
  + rootmanager (optional,number) - root manager id (**my report** - to identify start node of pyramid search)
  + rootdcode (optional,string) - department code (**my report** - to identify start node of pyramid search)

This action does not require authentication.

+ Parameters
    + searchQuery: {"revision":"1", "revisionstrict":"true", "lname":"Stewart", "emptype":["EXT","EMP"]} (Object) - json filter object
    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + lname
            + fname
            + dname
            + country
            + emptype
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return
    + report: EL (enum[string], optional) - Type of report (**throws error when invalid value**)
        + Members
            + DL
            + EL
            + UR
            + PREVIEW

+ Response 200 (application/json)

    + Attributes (Profiles collections)

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### List Vendor Profiles [GET /profiles/vendor{?searchQuery,page,pageSize,sort,sortOrder,report}]
Search vendor profiles.

Takes a `searchQuery` parameter object defined as follows
  + revision (required,number) - numeric id of the revision
  + revisionstrict (optional,boolean) - filter only profiles linked to the revision
  + lname (optional,String) - last name
  + fname (optional,String) - first name
  + email (optional,String) - email
  + dcode (optional,String) - department code
  + dname (optional,String) - department name
  + emptype (optional,String) - employee type code
  + profession (optional,String) - profession description
  + emptype (optiona,array[string]) - array of employee types (**my report**)
  + vendorid (optional, number) - vendor id (**my report**)
  + vendorname (optional, String) - vendor name

This action does not require authentication.

+ Parameters
    + searchQuery: {"revision":"1", "revisionstrict":"true", "lname":"Stewart", "emptype":["DEL","MAI"]} (Object) - json filter object
    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + lname
            + fname
            + dname
            + emptype
            + vendorname
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return
    + report: VL (enum[string], optional) - Type of report (**throws error when invalid value**). If none is specified, JSON will return
        + Members
            + VL
            + PREVIEW

+ Response 200 (application/json)

    + Attributes
      + results (array[VendorProfile1, VendorProfile2, VendorProfile3], required) - array of profiles
      + Include PaginationData

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Create Profile [POST]

Creates a user profile.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Request (application/json)

    + Attributes (ProfileCreate)

+ Response 201 (application/json)

    + Attributes (ProfileDetail1)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Change Password [PUT /profiles/password]

Change password for specified user.

This action does not require authentication.

+ Request (application/json)
  + Attributes
      + userId: `vtstest` (required, string),
      + currentPassword: `vtstest` (required, string),
      + newPassword: `vtstest2` (required, string)

+ Response 200

+ Response 400
    Returned when old password and new one are the same.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## Profile [/profiles/{id}]

+ Parameters
    + id: 1 (required, number) - id of the user

+ Attributes (ProfileDetail)

### Read Profile [GET]

This action does not require authentication.

+ Response 200 (application/json)

    + Attributes (Profile)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Read Profile Vendor [GET /profiles/{id}/vendor]

This action does not require authentication.

+ Response 200 (application/json)

    + Attributes (ProfileVendorDetail)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Update Profile [PUT]

Updates a user profiles. This actions takes an object composed by the base
profile, its informations and its addresses and updates everything in one single
swoop instead of having three different calls.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Request (application/json)

    + Attributes (ProfileDetail1)

+ Response 200 (application/json)

    + Attributes (ProfileDetail1)

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Dismiss Profile [PUT /profiles/{id}/dismiss]

Dismiss the specified user profile.
This actions is a specialized version of an update on the specified profile.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Parameters
    + id: 1 (required, number) - id of the user

+ Request (application/json)
  + Attributes
      + date: `2016-03-31` (required)

+ Response 200

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Profile [DELETE]

Deletes the specified profile.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## User personal Profile [/profiles/my]

### Read Profile [GET]

Used to retrieve user personal details.

This action is available to all authenticated users.

+ Response 200 (application/json)
  + Attributes (Profile)

+ Response 404
    Returned when the user does not have a profile.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Update Profile [PUT]

Updates user personal profile.

This action is available to all authenticated users.

+ Request (application/json)

    + Attributes (Profile)

+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## Profile Photo [/profiles/{id}/photo]

+ Parameters
    + id: 1 (required, number) - id of the user

### Read Profile Photo [GET]

Returns the specified user's photo.

**Released on feb 29**

+ Response 200 (application/png)

+ Response 404
    Returned when the user's photo cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## User personal Profile Photo [/profiles/my/photo]

### Read Profile Photo [GET]

Returns the current user's photo.

**Released on feb 29**

+ Response 200 (application/png)

+ Response 404
    Returned when the user's photo cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Upsert Profile Photo [POST]

**Released on Mar 02**

Creates or updates the current user's photo.

+ Request (application/png)

+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Profile Photo [DELETE]

Deletes the current user's photo.

**Released on Mar 24**

+ Response 204

+ Response 500
    Returned when a generic error occours.

    + Body

## Profiles Types collections [/profiles/types{?area}]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: ASG
          + description: IBM Assigned
      + (object)
          + id: UBD
          + description: UBIS Delegates
      + (object)
          + id: EXT
          + description: Extended Team IBM
  + Include PaginationData

+ Parameters
  + area: ED (enum[string], optional) - Area filter
      + Members
          + ED
          + VD

### List types [GET]
The list of types of employee. (HR Admin - People modify)

+ Response 200 (application/json)
  + Attributes (Profiles Types collections)


## Profiles roles collections [/profiles/roles]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: 1
          + description: ADMIN
      + (object)
          + id: 2
          + description: ND
      + (object)
          + id: 3
          + description: RCM
      + (object)
          + id: 8
          + description: USER
  + Include PaginationData


### List types [GET]

The list of user's roles. (HR Admin)

+ Response 200 (application/json)
  + Attributes (Profiles roles collections)

## Profiles professions collections [/profiles/professions]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + description: Architect
      + (object)
          + description: Consultant
      + (object)
          + description: Enterprise Operations
      + (object)
          + description: Finance

### List types [GET]

The list of user's professions fetched from profiles (My Report filter).<br/>
For now a table with all professions doesn't exists.

+ Response 200 (application/json)
  + Attributes (Profiles professions collections)


#######################
# Group Structure Types
#######################

## Structure Type collection [/organizations]

### Create Structure Type [POST]

+ Request (application/json)
    + Attributes (StructureType)

+ Response 201 (application/json)
    + Headers

            Location: /organizations/ZZ

    + Attributes (StructureType)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## Structure Type [/organizations/{type}]

### Read Structure Type [GET]

+ Parameters
    + type: ZZ (required, string)

+ Response 200 (application/json)

    + Attributes (StructureType)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Update Structure Type [PUT]

+ Parameters
    + type: ZZ (required, string)

+ Request (application/json)
    + Attributes
        + id: ZZ (required, string)
        + description: new structure type name (required, string)
        + active: Y (required, string)

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Structure Type [DELETE]

+ Parameters
    + type: ZZ (required, string)

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


#######################
# Group Organizations
#######################

## Organization types collections [/organizations/types]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: UO
          + description: Business
          + activeRevision: 1
      + (object)
          + id: FU
          + description: Functional
          + activeRevision: 7
      + (object)
          + id: OT
          + description: Other
          + activeRevision: 12

  + Include PaginationData

### List types [GET]
The list of structure types. (Hierarchical View - List Organization, Homepage)
+ Response 200 (application/json)
  + Attributes (Organization types collections)

#######################
# Group Revisions
#######################

## Revisions collection [/organizations/{type}/revisions{?page,sort,pageSize}]

+ Attributes (object)
  + results (array[Revision1, Revision2, Revision3, Revision4], required) - array of revisions
  + Include PaginationData

### List Revisions [GET]
Returns the revisions list.

+ Parameters
  + type: UO (string) - Structure type to filter for
  + page: 1 (optional, number) - The page of results to return
  + sort: description (optional) - Sorting order
  + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)
  + Attributes (Revisions collection)


### Create Revision [POST]

Creates a new revision.

+ Parameters
  + type: UO (string) - Reference structure type

+ Request (application/json)

    + Attributes (RevisionMini)

+ Response 201 (application/json)

    + Headers

            Location: /organizations/UO/revisions/123

    + Attributes (NewRevisionDetail)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## Revision [/organizations/{type}/revisions/{id}]

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision

+ Attributes (RevisionDetail)

### Read Revision [GET]
Used to retrieve revision detail.

+ Response 200 (application/json)

    + Attributes (Revision1)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Update Revision [PUT /organizations/{type}/revisions/{id}]

+ Parameters
    + type: UO (string) - Reference structure type
    + id: 1 (required, number) - id of the user

+ Request (application/json)
  + Attributes (Revision1)

+ Response 200

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Publish Revision [PUT /organizations/{type}/revisions/{id}/publish]

Publish the specified revision setting it as active.

+ Parameters
  + type: UO (string) - Reference structure type
  + id: 1 (required, number) - id of the user

+ Request (application/json)
  + Attributes
      + description (string)
      + startDate: `2016-03-31` (string, required)

+ Response 200

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Revision [DELETE]


+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


#######################
# Group Revisions / Tree Organizations
#######################

## Tree Organization Units [/organizations/{type}/revisions/{id}/ous{?page,sort,pageSize}]

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision
  + page: 1 (optional, number) - The page of results to return
  + sort: firstName (optional) - Sorting order
  + pageSize: 25 (optional, number) - Amount of results to return

+ Attributes (object)
  + results (array[Organization1, Organization2, Organization3], required) - array of first-level organizations
  + Include PaginationDataTree

### List Organization Units [GET]
Returns the revision organization structure tree with assigned people.

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision

+ Response 200 (application/json)
  + Attributes (Tree Organization Units)


### List Organization Units Vendor [GET /organizations/{type}/revisions/{id}/ous/vendor{?page,sort,pageSize}]
Returns the revision organization structure tree with assigned vendor profiles.

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision
  + page: 1 (optional, number) - The page of results to return
  + sort: firstName (optional) - Sorting order
  + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)
    + Attributes (object)
        + results (array[OrganizationVendor1, OrganizationVendor2, OrganizationVendor3], required) - array of organization units with vendor profiles
        + Include PaginationDataTree

### List Organization Units Managers [GET /organizations/{type}/revisions/{id}/ous/managers{?sort}]
Returns a list with managers for specified revision organization of a structure tree

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision
  + sort: fname (enum[string], optional) - Sorting field
      + Members
          + lname
          + fname

+ Response 200 (application/json)
    + Attributes (object)
        + results (array[Person1,Person1,Person1]) - array of organization units with vendor profiles
        + paginationData (object) - Informations required for pagination
            + count: 3 (number) - total number of resources
            + pageNum: 1 (number) - slice of resources returned
            + pageSize: 3 (number) - size of the slice

### List Organization Units types [GET /organizations/{type}/revisions/{id}/ous/types]
Returns the revision organization unit list.

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision

+ Response 200 (application/json)
    + Attributes (object)
        + results (array[OrganizationMini1, OrganizationMini2, OrganizationMini3], required) - array of organization units


## Tree Organization Unit  [/organizations/{type}/revisions/{id}/ous/{ouCode}]

### Organization Unit Person Update [PUT /organizations/{type}/revisions/{id}/ous/{ouCode}/people]

Update a person inside the Organization Units (set as manager) or Organization Tree (change ous/person).

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 or active (required) - id of the requested revision
    + ouCode: XL1232 (required, string) - id of the ou

+ Request (application/json)
    + Attributes
        + id: 2 (required, number) - id of the person
        + isManager: true (required, boolean) - isManager attribute (inside the ou with *ouCode* )
        + startDate: `2016-03-02` (required, string) - the start date if you want to change person's ou (not required)

+ Response 200 (application/json)
    + Attributes
      + id: 192 (number, required)
      + ouCode: `XL78491` (string, required)
      + startDate: `2016-04-01` (string, required)
      + isManager: true (boolean, required)
      + isMainManager: false (boolean, required)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Organization Unit Disable [PUT /organizations/{type}/revisions/{id}/ous/{ouCode}/disable]

Disable an Organization Units.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 or active (required) - id of the requested revision
    + ouCode: XL1232 (required, string) - code of the ou

+ Request (application/json)
  + Attributes
      + date: `2016-03-31` (required)

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Organization Unit Assign [PUT /organizations/{type}/revisions/{id}/ous/{ouCode}]

Assign Organization Unit to Parent from a specified date.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 or active (required) - id of the requested revision
    + ouCode: XL1232 (required, string) - code of the ou

+ Request (application/json)
  + Attributes
      + parentId: `XL1231` (required)
      + startDate: `2016-04-05` (required)

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Delete Tree Node - DRAFT [DELETE /organizations/{type}/revisions/{id}/ous/{ouCode}?{recursively}]

Deletes a node in the tree and, eventually all the children nodes.
Does NOT delete the related OrganizationUnit.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Parameters
    + recursively: true (string) - Structure type to filter for

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

#######################
# Group Revisions / People
#######################

## Person  [/organizations/{type}/revisions/{id}/people/{peopleid}]

### Person Organization Unit [GET /organizations/{type}/revisions/{id}/people/{peopleid}]

Return the current OrganizationUnit of the given person for the given structureType/revision

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 or active (required, string) - id of the requested revision
    + peopleid: 1 (required, number) - id of the user

+ Response 200 (application/json)

    + Attributes (object)
      + ouCode: `XL78491` (required, string)
      + ouName: `Value Resource Center` (required, string)
      + parentId: `XL78486` (required, string)
      + people (array[PersonWithRevisionAndVendor])

+ Response 500
    Returned when a generic error occours.

    + Body

### MyProfile Organization Unit [GET /organizations/{type}/revisions/{id}/people/my]

Return the current OrganizationUnit of the currently logged profile

This action is available only to `USER` role.

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 or active (required, string) - id of the requested revision

+ Response 200 (application/json)

    + Attributes (object)
      + ouCode: `XJ99004` (required, string)
      + ouName: `Austria HR` (required, string)
      + parentId: `XL78485` (required, string)
      + people (array[PersonWithRevisionAndVendor])

+ Response 500
    Returned when a generic error occours.

    + Body

### Person Same Manager [GET /organizations/{type}/revisions/{id}/people/{peopleid}/sameManager{?page,pageSize,sort,sortOrder}]

Return all the people who are managed by the same manager of the person with id== **id** .

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 (required, number) - id of the requested revision
    + peopleid: 1 (required, number) - id of the user
    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + lname
            + fname
            + dname
            + country
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)

    + Attributes
        + Include PaginationData
        + results (array)
            + (Profile1)
                + ouCode: `XL78494` (required, string)
                + ouName: `Controller` (required, string)
                + empTypeName: `V-TS Employee` (required, string)
            + (Profile2)
                + ouCode: `XL78480` (required, string)
                + ouName: `Global DPE (Delivery Project Executive)` (required, string)
                + empTypeName: `V-TS Employee` (required, string)
            + (Profile3)
                + ouCode: `XL78491` (required, string)
                + ouName: `Value Resource Center` (required, string)
                + empTypeName: `V-TS Employee` (required, string)

+ Response 500
    Returned when a generic error occours.

    + Body

### Person People Managed [GET /organizations/{type}/revisions/{id}/people/{peopleid}/peopleManaged{?page,pageSize,sort,sortOrder}]

Return all the people who are managed the manager with id== **id**.

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 (required, number) - id of the requested revision
    + peopleid: 1 (required, number) - id of the user
    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + lname
            + fname
            + dname
            + country
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)

    + Attributes
        + Include PaginationData
        + results (array)
            + (Profile1)
                + ouCode: `XL78494` (required, string)
                + ouName: `Controller` (required, string)
                + empTypeName: `V-TS Employee` (required, string)
            + (Profile2)
                + ouCode: `XL78480` (required, string)
                + ouName: `Global DPE (Delivery Project Executive)` (required, string)
                + empTypeName: `V-TS Employee` (required, string)
            + (Profile3)
                + ouCode: `XL78491` (required, string)
                + ouName: `Value Resource Center` (required, string)
                + empTypeName: `V-TS Employee` (required, string)

+ Response 500
    Returned when a generic error occours.

    + Body

### Person Other roles [GET /organizations/{type}/revisions/{id}/people/{peopleid}/otherRoles{?page,pageSize,sort,sortOrder}]

Return all roles of the person with id== **id** other than then one in structure type== **type**.

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 (required, number) - id of the requested revision
    + peopleid: 1 (required, number) - id of the user
    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + role
            + structure
            + fname
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)
+ Attributes (object)
  + results (array[OtherRolesPerson1,OtherRolesPerson2,OtherRolesPerson3]) - array of assigned profiles
  + paginationData (object) - Informations required for pagination
      + count: 3 (number) - total number of resources
      + pageNum: 1 (number) - slice of resources returned
      + pageSize: 3 (number) - size of the slice

+ Response 500
    Returned when a generic error occours.

    + Body


#######################
# Group Organization Units
#######################

## Organization Units collection [/ous{?searchQuery,page,sort,pageSize}]

+ Attributes (object)
    + results (array[OrganizationMini1, OrganizationMini2, OrganizationMini3], required) - array of revisions
    + Include PaginationData

### List Organization Units [GET]
Returns the Organization Units list.

+ Parameters
    + searchQuery: {"type":"UO","uoname":"stor"} (Object) - json filter object
    + page: 1 (optional, number) - The page of results to return
    + sort: uoname (optional) - Sorting order
    + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)
    + Attributes (Organization Units collection)


### Create Organization Unit [POST]

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Request (application/json)
    + Attributes (OrganizationMini3)

+ Response 201 (application/json)
    + Headers

            Location: /ous/XL8654

    + Attributes (OrganizationMini3)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## Organization Unit [/ous/{ouCode}]

### Read Organization Unit [GET]

+ Parameters
    + ouCode: XL8654 (required, string) - code of the ou

+ Response 200 (application/json)

    + Attributes (OrganizationMini3)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Update Organization Unit [PUT]

Update the name of an Organization Unit.

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Parameters
    + ouCode: XL8654 (required, string) - code of the ou

+ Request (application/json)
    + Attributes
        + ouCode: XL8654 (required, string) - code of the ou
        + ouName: new organization name (required, string) - the new name of the ou

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Organization Unit  [DELETE]

This action is available only to `ADMIN` and `HRITADMIN` roles.

+ Parameters
    + ouCode: XL8654 (required, string) - code of the ou

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


#######################
# Group Vendor
#######################

## Vendor collection [/vendors]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: 1
          + name: IBM Italia S.p.a.
      + (object)
          + id: 2
          + name: EUDATA S.R.L.
      + (object)
          + id: 3
          + name: MAUDEN SPA
  + Include PaginationData

### List Vendors [GET]
The list of vendors.

+ Response 200 (application/json)
  + Attributes (Vendor collection)

### Create Vendor [POST]

This action is available only to `ADMIN` role.

+ Request (application/json)
+ Attributes (object)
  + id
  + name: vendor name (required, string)

+ Response 201 (application/json)
    + Headers

            Location: /vendors/1

    + Attributes (Vendor1)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## Vendor [/vendors/{id}]

### Read Vendor [GET]

+ Parameters
    + id: 1 (required, number)

+ Response 200 (application/json)

    + Attributes (Vendor1)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Update Vendor [PUT]

This action is available only to `ADMIN` role.

+ Parameters
    + id: 1 (required, number)

+ Request (application/json)
    + Attributes
        + id: 1 (required, number)
        + name: new vendor name (required, string)

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Vendor [DELETE]

This action is available only to `ADMIN` role.

+ Parameters
    + id: 1 (required, number)

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


#######################
# Group Locations
#######################

## Locations collection [/locations]

+ Attributes (object)
  + results (array[Location1, Location2, Location3], required) - array of locations
  + Include PaginationData

### List Locations [GET]
The list of locations.

+ Response 200 (application/json)
  + Attributes (Locations collection)

### Create Location [POST]
Creates a new location.

This action is available only to `ADMIN` role.

+ Request (application/json)
+ Attributes (Location1)

+ Response 201 (application/json)
    + Headers

            Location: /locations/1

    + Attributes (Location1)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## Location [/locations/{id}]

### Read Location [GET]

+ Parameters
    + id: 1 (required, number)

+ Response 200 (application/json)

    + Attributes (Location1)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Update Location [PUT]

This action is available only to `ADMIN` role.

+ Parameters
    + id: 1 (required, number)

+ Request (application/json)
    + Attributes (Location2)

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Location [DELETE]

This action is available only to `ADMIN` role.

+ Parameters
    + id: 1 (required, number)

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

#######################
# Group Countries
#######################


## Countries collections [/countries]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: 1
          + description: Italy
      + (object)
          + id: 2
          + description: Germany
      + (object)
          + id: 3
          + description: Austria
      + (object)
          + id: 4
          + description: Spain
  + Include PaginationData


### List countries [GET]

The list countries. (HR Admin - People insert, HR Admin - People modify)

+ Response 200 (application/json)
  + Attributes (Countries collections)

<!--
#######################
# Group General Messages
#######################

## General Messages [/generalMessages]

+ Attributes (object)
    + availabilityAlert (object)
        + firstRow: `first row alert` (string)
        + secondRow: `second row alert` (string)
    + newRelease (object)
        + firstRow: `first row release` (string)
        + secondRow: `second row release` (string)

### Read general messages [GET]
Get the general message.
+ Response 200 (application/json)
    + Attributes (General Messages)

### Update general messages [PUT]
Update the general message with a new one.
+ Request (application/json)
    + Attributes (General Messages)

+ Response 200


#######################
# Group Support Requests
#######################

## Support Requests Collection [/supportRequests{?page,pageSize,sort,sortOrder,viewAllAssignee,excludeClosed}]

+ Attributes (object)
  + results (array[SupportRequestClosedMini, SupportRequestOpenMini, SupportRequestAssignedMini, SupportRequestForcedMini], required)
  + Include PaginationData

### Support requests list [GET]

+ Parameters
    + page: 1 (optional, number) - The page of profiles to return
    + sort: requestDate (enum[string], optional) - Sorting field
        + Members
            + requestDate
            + assignmentDate
            + closureDate
            + status
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return
    + viewAllAssignee: true (optional, boolean)
    + excludeClosed: false (optional, boolean)

+ Response 200 (application/json)
    + Attributes (Support Requests Collection)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Create Support Request [POST]
Creates a new support request and adds the proper messages depending on the 'assign' and 'closure' field values

+ Request (application/json)

    + Attributes (SupportRequestNew)

+ Response 201 (application/json)

    + Headers

            Location: /supportRequests/2

    + Attributes (SupportRequestOpen)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## Support Request [/supportRequests/{id}]

+ Parameters
    + id: 1 (required, number) - id of the support request

### Read Support Request [GET]

+ Response 200 (application/json)

    + Attributes (SupportRequestClosed)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Update Support Request [PUT]

+ Request (application/json)

    + Attributes (SupportRequestClosedUpdate)

+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Support Request  [DELETE]

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Assign Support Request [PUT /supportRequests/{id}/assign]
Changes the status of the support request to 'Assigned' and adds a proper message

+ Request (application/json)
    + Attributes (object)
        + userId: `balessandro` (required, string) - id of the assignee profile

+ Response 200 (application/json)

    + Attributes (SupportRequestAssigned)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Close Support Request [PUT /supportRequests/{id}/close]
Changes the status of the support request to 'Closed' and adds a proper message

+ Request (application/json)
    + Attributes (object)
        + reason: `Motivazione chiusura lorem ipsum` (required, string)

+ Response 200 (application/json)

    + Attributes (SupportRequestClosed)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Forced closure Support Request [PUT /supportRequests/{id}/force]
Changes the status of the support request to 'Forced closure' and adds a proper message

+ Response 200 (application/json)

    + Attributes (SupportRequestForced)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## DRAFT - Documents Modify [/supportRequests/{id}/document]
+ Parameters
    + id: 1 (required, number) - id of the request

+ Attributes (Support Request Document Upload)

### Support request Document Upload [PUT]
Allow you to upload a new document for a support request
+ Request (application/json)
    + Attributes (Support Request Document Upload)

+ Response 200 (application/json)
    + Attributes (object)
        + id: 1 (required, number) - the id of the request
        + documents (array) - the new array of documents
            + `http://url.doc.1`
            + `http://url.doc.2`
            + `http://url.doc.3`
            + `http://url.doc.4`


### Support request Document Remove [POST]
Allow you to remove a support request's document
+ Request (application/json)
    + Attributes (Support Request Document Remove)

+ Response 200 (application/json)
    + Attributes (object)
        + id: 1 (required, number) - the id of the request
        + documents (array) - the new array of documents
            + `http://url.doc.1`
            + `http://url.doc.2`


+ Response 200
-->

# Data Structures

## PaginationData (object)
+ paginationData (object, required) - Informations required for pagination
    + count: 62 (number,required) - total number of resources
    + pageNum: 1 (number, required) - slice of resources returned
    + pageSize: 25 (number, required) - size of the slice

## PaginationDataTree (object)
+ paginationData (object, required) - Informations required for pagination
    + count: 3 (number,required) - total number of resources
    + pageNum: 1 (number, required) - slice of resources returned
    + pageSize: 25 (number, required) - size of the slice

## ProfileBase (object)
+ firstName: `MARIO` (required, string) - First name of the profile. Must be between 2 and 50 chars long.
+ lastName: `BIANCHI` (required, string) - Last name of the profile. Must be between 2 and 50 chars long.
+ email: `mbianchi@acme.it` (required, string) - Email of the profile. Must be a valid email, as specified in RFC2822.
+ profession: `Senior Developer` (string)
+ businessUnit: `not used?` (string)
+ jobResponsability: `job responsability` (string)
+ altInternetAddress: `firstname.lastname@organization2.com` (string) - Must be a valid email, as specified in RFC2822.
+ notesAddress: `indirizzo_notes@aaaaa.it` (string) - Must be a valid email, as specified in RFC2822.
+ userId: `userid` (required, string) - Username of the profile. This field must match with the field used to authenticate on the application server.
+ employeeType: `MAI` (required, string) - Code of profile type
+ personalCode: `X123456` (required, string)
+ bluePageCode: `L123456` (required, string)
+ hiringDate: `2016-02-28` (required, string) - Hiring date of the profile. The profile can be found through queries only starting from the specified date.
+ managerRole: `true` (boolean)
+ phone (object)
    + country: `39` (string)
    + number: `12345678` (string)
+ mobilePhone (object)
    + country: `39` (string)
    + number: `1234567` (string)
+ fax (object)
    + country: `39` (string)
    + number: `3904912345678` (string)
+ vendor (Vendor1) - Vendor object for vendor employees. Only its `id` is used.
+ functionalManager (object) - Profile of the functional manager. Only its `id` is used.
    + id: 1 (number)

## ProfileDetail (ProfileBase)
+ Include ProfileInformations
+ Include ProfilesAddresses

## ProfileCreate (ProfileDetail)
+ dismissDate: `2016-02-28` (required, string) - Dismiss date. Only considered when inserting the profile.

## ProfileVendorDetail (ProfileBase)
+ Include ProfilesAddresses
+ Include ProfileVendor1


## ProfileDetail1 (ProfileDetail)
+ id: 1 (number) - id of the profile

## Profile1 (ProfileBase)
+ id: 1 (number) - id of the profile

## Profile2 (ProfileBase)
+ id: 2 (number) - id of the profile

## Profile3 (ProfileBase)
+ id: 3 (number) - id of the profile

## VendorProfile1 (ProfileBase)
+ id: 1 (number) - id of the profile
+ Include ProfileVendor1

## VendorProfile2 (ProfileBase)
+ id: 2 (number) - id of the profile
+ Include ProfileVendor1

## VendorProfile3 (ProfileBase)
+ id: 3 (number) - id of the profile
+ Include ProfileVendor2

## ProfileInformations (object)
+ informations
    + expertiseSummary: `expertise summary text`
    + certification: `certifications text`
    + generalExperienceBusiness: `business experience text`
    + generalExperienceIndustry: `industry experience text`
    + generalExperienceCustomer: `customer experience text`
    + technicalExperience: `industry experience text`
    + solutionsProducts: `solutions products text`
    + communities: `communities text`
    + businessGoals: `business goals text`
    + professionalOrganizations: `professional organizations text`
    + projects: `projects text`
    + team: `team text`

## ProfilesAddresses (object)
+ addresses
    + preferred (ProfileAddress) - preferred address of the user, if different from business address.
    + business (ProfileAddress) - business address of the user.

## ProfileAddress
+ street: Via Nizza 15
+ city: Torino
+ country: Italy
+ zip: 12345
+ locationId: 1 (number)


## ProfileAddressCountry
+ country: Italy
+ locationId: 1

## StructureType (object)
+ id:`ZZ`
+ description:`Structure type desc`
+ active:`Y`

## Organization1 (object)
+ ouCode: `XL9875` (required, string)
+ ouName: `organization name 1` (required, string)
+ parentId: `XL9875` (required, string)
+ people (array[Person1,Person2], optional)

## Organization2 (object)
+ ouCode: `XL8654` (required, string)
+ ouName: `organization name 2` (required, string)
+ parentId: `XL9875` (required, string)
+ people (array[Person3], optional)

## Organization3 (object)
+ ouCode: `XL9352` (required, string)
+ ouName: `organization name 1` (required, string)
+ parentId: `XL9875` (required, string)
+ people (array[Person4,Person5], optional)

## RevisionId
+ id: 1 (number, required)

## VendorIdAndName
+ id : 1 (required, number)
+ name: `IBM Italia S.p.a.` (required, string)

## OrganizationVendor1 (object)
+ ouCode: `XL9875` (required, string)
+ ouName: `organization name 1` (required, string)
+ parentId: `XL9875` (required, string)
+ people (array[PersonVendor1,PersonVendor2], optional)

## OrganizationVendor2 (object)
+ ouCode: `XL8654` (required, string)
+ ouName: `organization name 2` (required, string)
+ parentId: `XL9875` (required, string)
+ people (array[], optional)

## OrganizationVendor3 (object)
+ ouCode: `XL9352` (required, string)
+ ouName: `organization name 1` (required, string)
+ parentId: `XL9875` (required, string)
+ people (array[], optional)

## OrganizationMini1 (object)
+ ouCode: `XL9875` (required, string)
+ ouName: `organization name 1` (required, string)

## OrganizationMini2 (object)
+ ouCode: `XL9352` (required, string)
+ ouName: `organization name 1` (required, string)

## OrganizationMini3 (object)
+ ouCode: `XL8654` (required, string)
+ ouName: `organization name 1` (required, string)

## OrganizationMini4 (object)
+ ouCode: `XL8654` (required, string)
+ ouName: `organization name 1bis` (required, string)

## Person1 (object)
+ id: 1 (required, number)
+ lastName: `Linzi` (string, required)
+ firstName: `Giovanni` (string, required)
+ isManager: true (boolean, required)
+ isMainManager: true (boolean, required)
+ employeeType: EXT (string, required)
+ startdate: `2016-04-01` (string, required)
+ enddate: `2016-04-01` (string)

## Person2 (object)
+ id: 2 (required, number)
+ lastName: `Linzi` (string, required)
+ firstName: `Giovanni` (string, required)
+ isManager: false (boolean, required)
+ isMainManager: false (boolean, required)
+ employeeType: EXT (string, required)
+ startdate: `2016-04-01` (string, required)

## Person3 (object)
+ id: 3 (required, number)
+ lastName: `Signori` (string, required)
+ firstName: `Marco` (string, required)
+ isManager: true (boolean, required)
+ isMainManager: false (boolean, required)
+ employeeType: EXT (string, required)
+ startdate: `2016-04-01` (string, required)
+ enddate: `2016-04-01` (string)

## Person4 (object)
+ id: 4 (required, number)
+ lastName: `Moretto` (string, required)
+ firstName: `Alberto` (string, required)
+ isManager: true (boolean, required)
+ isMainManager: true (boolean, required)
+ employeeType: EXT (string, required)
+ startdate: `2016-04-01` (string, required)
+ enddate: `2016-04-01` (string)

## Person5 (object)
+ id: 5 (required, number)
+ lastName: `Tessarolo` (string, required)
+ firstName: `Giovanni` (string, required)
+ isManager: false (boolean, required)
+ isMainManager: false (boolean, required)
+ employeeType: EXT (string, required)
+ startdate: `2016-04-01` (string, required)
+ enddate: `2016-04-01` (string)

## PersonWithRevisionAndVendor (object)
+ revision (object)
    + id: 334 (required, number)
+ id: 1 (required, number)
+ lastName: `BIANCHI` (required, string)
+ firstName: `MARIO` (required, string)
+ isManager: false (required, boolean)
+ isMainManager: false (required, boolean)
+ startDate: `2016-03-31` (required, string)
+ endDate: `2020-12-31` (string)
+ employeeType: `MAI` (required, string)
+ vendor (VendorIdAndName, required)

## PersonVendor1 (object)
+ revision (RevisionId, required)
+ id: 1 (required, number)
+ lastName: `Linzi` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: false (required, boolean)
+ isMainManager: false (required, boolean)
+ startDate: `2016-03-31` (required, string)
+ endDate: `2020-12-31` (string)
+ employeeType: `DEL` (required, string)
+ vendor (VendorIdAndName, required)

## PersonVendor2 (object)
+ revision (RevisionId, required)
+ id: 2 (required, number)
+ lastName: `Linzi` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: false (required, boolean)
+ isMainManager: false (required, boolean)
+ startDate: `2016-03-31` (required, string)
+ employeeType: `DEL` (required, string)
+ vendor (VendorIdAndName, required)

## ProfileVendor1 (object)
+ vendor (Vendor1)

## ProfileVendor2 (object)
+ vendor (Vendor2)

## Vendor1 (object)
+ id: 1 (required, number)
+ name: `IBM Italia S.p.a.` (required, string)

## Vendor2 (object)
+ id: 2 (required, number)
+ name: `EUDATA S.R.L.` (required, string)

## Vendor3 (object)
+ id: 3 (required, number)
+ name: `MAUDEN SPA` (required, string)

##SupportRequestMessageAssigned (object)
+ id: 1 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:12:10` (required, string)
+ description: `This support request was assigned to Baggio Alessandro(bAlessandro@email.it)` (required, string)

##SupportRequestMessageClosed (object)
+ id: 2 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:14:10` (required, string)
+ description: `This support request was closed (Motivazione chiusura lorem ipsum)` (required, string)

##SupportRequestMessageForced (object)
+ id: 3 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:14:10` (required, string)
+ description: `This support request was forcefully closed` (required, string)

##SupportRequestMessageOpen (object)
+ id: 4 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:10:10` (required, string)
+ description: `This support request was created` (required, string)

##SupportRequestNew (object)
+ status (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title (string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate (string)
+ closureReason (string)

##SupportRequestClosed (object)
+ id: 1 (required, number)
+ status: `Closed` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)
+ closureReason: `Motivazione chiusura lorem ipsum` (string)
+ messages (array[SupportRequestMessageOpen,SupportRequestMessageAssigned,SupportRequestMessageClosed]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestForced (object)
+ id: 4 (required, number)
+ status: `Forced closure` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)
+ closureReason (string)
+ messages (array[SupportRequestMessageOpen,SupportRequestMessageAssigned,SupportRequestMessageForced]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestClosedUpdate (object)
+ id: 1 (required, number)
+ status: `Closed` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)
+ closureReason: `Motivazione chiusura lorem ipsum` (string)

##SupportRequestOpen (object)
+ id: 2 (required, number)
+ status: `Open` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:2` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate (string)
+ employeeProfileAssignedTo (object)
+ closureDate (string)
+ closureReason (string)
+ messages (array[SupportRequestMessageOpen]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestAssigned (object)
+ id: 3 (required, number)
+ status: `Assigned` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:3` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate (string)
+ closureReason (string)
+ messages (array[SupportRequestMessageOpen,SupportRequestMessageAssigned]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestClosedMini (object)
+ id: 1 (required, number)
+ status: `Closed` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)

##SupportRequestForcedMini (object)
+ id: 4 (required, number)
+ status: `Forced closure` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)

##SupportRequestOpenMini (object)
+ id: 2 (required, number)
+ status: `Open` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:2` (required, string)
+ employeeProfileAssignedTo (object)
+ closureDate (string)

##SupportRequestAssignedMini (object)
+ id: 3 (required, number)
+ status: `Assigned` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:3` (required, string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate (string)

##Support Request Document Upload (object)
+ id: 1 (required, number) - id of the request that you wants to modify
+ document: `` (string) - base64 file to upload a document

##Support Request Document Remove (object)
+ id: 1 (required, number) - id of the request that you wants to modify
+ removeDocuments (array[string]) - array with documents to remove
    + `http://url.doc.3`

## SearchObject (object)
+ Include SearchQuery
+ orgType: UO (string, optional) - Structure type to filter for
+ page: 1 (optional, number) - The page of profiles to return
+ sort: fname (enum[string], optional) - Sorting field
    + Members
        + lname
        + fname
        + dname
        + country
+ sortOrder: asc (enum, optional) - Sorting order
    + Members
        + asc
        + desc
+ pageSize: 25 (optional, number) - Amount of results to return

## SearchQuery (object)
+ searchQuery (object, required)
    + and (array[AndQuery1, AndQuery2, AndQuery3, AndQuery4, AndQuery5, AndQuery6], required)

## AndQuery1 (object)
+ or (array[OrQuery1, OrQuery2])

## OrQuery1 (object)
+ id: 12

## OrQuery2 (object)
+ id: 32

# AndQuery2 (object)
+ lname: Rossi (string)


# AndQuery3 (object)
+ fname: Mario (string)


# AndQuery4 (object)
+ email: mrossi@ibm.it (string)


# AndQuery5 (object)
+ dcode: XL1231 (string)


# AndQuery6 (object)
+ dname: Austria CEO (string)

## RevisionMini (object)
  + description: Struttura 1 (string) - description of revision


## RevisionDetail (object)
  + id: 1 (required) - id of the revision
  + orgtype: UO (string) - Organization type to filter for
  + description: Struttura 1 (string) - description of revision
  + startDate: `2015-06-30` (string) - start date for the revision
  + endDate: `` (string) - end date for the revision
  + status: `active` (enum[string]) - status of the revision
   + Members
        + active
        + expired
        + draft

## NewRevisionDetail (object)
  + id: 1 (required) - id of the revision
  + orgtype: UO (string) - Organization type to filter for
  + description: Struttura 1 (string) - description of revision
  + startDate (string) - start date for the revision
  + endDate (string) - end date for the revision
  + status: `draft` (enum[string]) - status of the revision


## Revision1 (object)
+ id: 1
+ description:`Struttura 1`
+ startdate : `2016-03-01`
+ enddate : ``(string)
+ status : `active`

## Revision2 (object)
+ id: 2
+ description:`Struttura 2`
+ startdate : `` (string)
+ enddate : `` (string)
+ status : `draft`

## Revision3 (object)
+ id: 3
+ description:`Struttura 3`
+ startdate : `2015-06-30`
+ enddate : `2016-02-29`
+ status : `expired`

## Revision4 (object)
+ id: 4
+ description:`Struttura 4`
+ startdate : `` (string)
+ enddate : `` (string)
+ status : `draft`

## Location1 (object)
+ id: 1 (required, number)
+ street: Via Lisbona (string)
+ zip: 12345 (string)
+ city: Padova (string)
+ state: PD (string)
+ country: Italy (string)

## Location2 (object)
+ id: 2 (required, number)
+ street: Via Roma 12 (string)
+ zip: 12345 (string)
+ city: Milano (string)
+ state: MI (string)
+ country: Italy (string)

## Location3 (object)
+ id: 3 (required, number)
+ street: Lassallestrasse 233 (string)
+ zip: 12345 (string)
+ city: Vienna (string)
+ state: AT (string)
+ country: Austria (string)

## OtherRolesPerson1 (object)
+ id: 99 (number)
+ lastName: `Linzi` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: true (boolean)
+ isMainManager: true (boolean)
+ role: `BC COMMITTEE`
+ ouCode: `XL8651`
+ ouName: `organization name aaa`
+ revision (object)
    + id: 334 (number)
    + description: `Attiva` (string)
    + structureType (object)
      + id: `UO` (string)
      + description: `Business` (string)

## OtherRolesPerson2 (object)
+ id: 99 (required, number)
+ lastName: `Linzi` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: false (boolean)
+ isMainManager: false (boolean)
+ role: `EMPLOYEE`
+ ouCode: `XL8652`
+ ouName: `organization name bbb`
+ revision (object)
    + id: 467 (number)
    + description: `Revisione BC TEST` (string)
    + structureType (object)
      + id: `BC` (string)
      + description: `Business Continuity` (string)

## OtherRolesPerson3 (object)
+ id: 99 (required, number)
+ lastName: `Linzi` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: true (boolean)
+ isMainManager: true (boolean)
+ role: `MANAGER`
+ ouCode: `XL8653`
+ ouName: `organization name ccc`
+ revision (object)
    + id: 473 (number)
    + description: `Revisione SE TEST` (string)
    + structureType (object)
      + id: `SE` (string)
      + description: `Security` (string)
