FORMAT: 1A
HOST: http://ed2016.vts.it/

# ED

Service Oriented Architecture specified for the ED project.


#######################
# Group Profiles
#######################

Resources related to user's profile in the API.

## Profiles collections [/profiles{?searchQuery}{?page}{?pageSize}{?sort}{?sortOrder}]

+ Attributes (object)
    + results (array[Profile1, Profile2, Profile3], required) - array of profiles
    + Include PaginationData

  
### List Profiles [GET]
Search user profiles.

+ Parameters
    + searchQuery: {"revision":"1","revisionstrict":"true","lname":"Stewart"} (Object) - json filter object  
       + revision (required,number) : numeric id of the revision
       + revisionstrict (optional,boolean) : filter only profiles linked to the revision 
       + lname (optional,String) : last name
       + fname (optional,String) : fist name
       + email (optional,String) : email
       + dcode (optional,String) : department code
       + dname (optional,String) : department name

    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + lname
            + fname
            + dname
            + country
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)

    + Attributes (Profiles collections)

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Create Profile [POST]

Creates a user profile. 

**Released on Mar 03**

+ Request (application/json)

    + Attributes (ProfileMini)

+ Response 201 (application/json)

    + Headers

            Location: /profiles/123

    + Attributes (ProfileMiniRes)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## Profile [/profiles/{id}]

+ Parameters
    + id: 1 (required, number) - id of the user

+ Attributes (ProfileDetail)

### Read Profile [GET]

+ Response 200 (application/json)

    + Attributes (Profile)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Update Profile [PUT]

Updates a user profiles. This actions takes an object composed by the base
profile, its informations and its addresses and updates everything in one single
swoop instead of having three different calls.

+ Request (application/json)

    + Attributes (ProfileBase)

+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Dismiss Profile [PUT /profiles/{id}/dismiss]

Dismiss the specified user profile.
This actions is a specialized version of an update on the specified profile.

**Released on Mar 03**

+ Parameters
    + id: 1 (required, number) - id of the user

+ Request (application/json)
  + Attributes
      + date: `2016-03-31`
    
+ Response 200

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Profile [DELETE]

**Released on Mar 09**

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## User personal Profile [/profiles/my]

### Read Profile [GET]

Used to retrieve user personal details.

+ Response 200 (application/json)
  + Attributes (Profile)

+ Response 404
    Returned when the user is not authenticated.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Update Profile [PUT]

Updates user personal profile. 

+ Request (application/json)

    + Attributes (ProfileBase)

+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Change Password [PUT /profiles/my/password]

Change password for currently logged in user.

**Released on Mar 10**

+ Request (application/json)
  + Attributes
      + userId: `user` (required, string),
      + currentPassword: `XXXX` (required, string),
      + newPassword: `YYYY` (required, string)
    
+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body 

## Profile Photo [/profiles/{id}/photo]

+ Parameters
    + id: 1 (required, number) - id of the user

### Read Profile Photo [GET]

Returns the specified user's photo.

**Released on feb 29**

+ Response 200 (application/png)

+ Response 404
    Returned when the user's photo cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## User personal Profile Photo [/profiles/my/photo]

### Read Profile Photo [GET]

Returns the current user's photo.

**Released on feb 29**

+ Response 200 (application/png)

+ Response 404
    Returned when the user's photo cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Upsert Profile Photo [POST]

**Released on Mar 02**

Creates or updates the current user's photo.

+ Request (application/png)

+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## Profiles Types collections [/profiles/types]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: ASG
          + description: IBM Assigned
      + (object)
          + id: UBD
          + description: UBIS Delegates
      + (object)
          + id: EXT
          + description: Extended Team IBM
  + Include PaginationData

### List types [GET]
The list of types of employee. (HR Admin - People modify)

+ Response 200 (application/json)
  + Attributes (Profiles Types collections)
  

## Profiles roles collections [/profiles/roles]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: 1
          + description: ADMIN
      + (object)
          + id: 2
          + description: ND
      + (object)
          + id: 3
          + description: RCM
      + (object)
          + id: 8
          + description: USER
  + Include PaginationData


### List types [GET]

The list of user's roles. (HR Admin)

+ Response 200 (application/json)
  + Attributes (Profiles roles collections)

#######################
# Group Organizations
#######################

## Organization types collections [/organizations/types]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: UO
          + description: Business
          + activerevision: 1
      + (object)
          + id: FU
          + description: Functional
          + activerevision: 7
      + (object)
          + id: OT
          + description: Other
          + activerevision: 12

  + Include PaginationData

### List types [GET]
The list of structure types. (Hierarchical View - List Organization, Homepage)
+ Response 200 (application/json)
  + Attributes (Organization types collections)

#######################
# Group Revisions
#######################

## Revisions collection [/organizations/{type}/revisions{?page}{?sort}{?pageSize}]

+ Attributes (object)
  + results (array[Revision1, Revision2, Revision3], required) - array of revisions
  + Include PaginationData

### List Revisions [GET]
Returns the revisions list.

+ Parameters
  + type: UO (string) - Structure type to filter for
  + page: 1 (optional, number) - The page of results to return
  + sort: description (optional) - Sorting order
  + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)
  + Attributes (Revisions collection)


### Create Revision [POST]

Creates a new revision. 

+ Parameters
  + type: UO (string) - Reference structure type 

+ Request (application/json)

    + Attributes (RevisionMini)

+ Response 201 (application/json)

    + Headers

            Location: /revisions/123

    + Attributes (NewRevisionDetail)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


## Revision [/organizations/{type}/revisions/{id}]

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision 

+ Attributes (RevisionDetail)

### Read Revision [GET]
Used to retrieve revision detail.

+ Response 200 (application/json)

    + Attributes (Revision1)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Publish Revision [PUT /organizations/{type}/revisions/{id}/publish]

Publish the specified revision setting it as active.

+ Parameters
  + type: UO (string) - Reference structure type 
  + id: 1 (required, number) - id of the user

+ Request (application/json)
  + Attributes
      + description (string)
      + startDate: `2016-03-31` (string, required)
    
+ Response 200

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Delete Revision [DELETE]


+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


#######################
# Group Revisions / Tree Organizations
#######################

## Tree Organization Units [/organizations/{type}/revisions/{id}/ous{?page}{?sort}{?pageSize}]

+ Parameters
  + type: UO (string) - Structure type to filter for
  + id: 1 or active (required) - id of the requested revision 
  + page: 1 (optional, number) - The page of results to return
  + sort: firstName (optional) - Sorting order
  + pageSize: 25 (optional, number) - Amount of results to return

+ Attributes (object)
  + results (array[Organization1, Organization2, Organization3], required) - array of first-level organizations
  + Include PaginationDataTree

### List Organization Units [GET]
Returns the revision organization structure tree.

**Released on Mar 17**

+ Response 200 (application/json)
  + Attributes (Tree Organization Units)


## Tree Organization Unit  [/organizations/{type}/revisions/{id}/ous/{ouCode}] 

### Organization Unit Person Update [PUT /organizations/{type}/revisions/{id}/ous/{ouCode}/people]

Update a person inside the Organization Units (set as manager) or Organization Tree (change ous/person).

**Released on Mar 22**

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 or active (required) - id of the requested revision 
    + ouCode: XL1232 (required, string) - id of the ou

+ Request (application/json)
    + Attributes
        + id: 2 (required, number) - id of the person
        + isManager: true (required, boolean) - isManager attribute (inside the ou with *ouCode* )
        + startDate: `2016-03-02` (required, string) - the start date if you want to change person's ou (not required)

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Organization Unit Disable [PUT /organizations/{type}/revisions/{id}/ous/{ouCode}/disable]

Disable an Organization Units.

+ Parameters
    + type: UO (string) - Structure type to filter for
    + id: 1 or active (required) - id of the requested revision 
    + ouCode: XL1232 (required, string) - code of the ou

+ Request (application/json)
  + Attributes
      + date: `2016-03-31`

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


### Person Same Manager [GET /organizations/{type}/revisions/{revisionid}/ous/{ouCode}/people/{peopleid}/sameManager{?page}{?pageSize}{?sort}{?sortOrder}]

Return all the people who are managed by the same manager of the person with id== **id** .

**Released on Mar 17**

+ Parameters
    + type: UO (string) - Structure type to filter for
    + revisionid: 1 (required, number) - id of the revision
    + ouCode: XL1232 (required, string) - id of the ou
    + peopleid: 1 (required, number) - id of the user
    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + lname
            + fname
            + dname
            + country
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)

    + Attributes (Profiles collections)

+ Response 500
    Returned when a generic error occours.

    + Body

### Person People Managed [GET /organizations/{type}/revisions/{revisionid}/ous/{ouCode}/people/{peopleid}/peopleManaged{?page}{?pageSize}{?sort}{?sortOrder}]

Return all the people who are managed the manager with id== **id**.

**Released on Mar 17**

+ Parameters
    + type: UO (string) - Structure type to filter for
    + revisionid: 1 (required, number) - id of the revision
    + ouCode: XL1232 (required, string) - id of the ou
    + peopleid: 1 (required, number) - id of the user
    + page: 1 (optional, number) - The page of profiles to return
    + sort: fname (enum[string], optional) - Sorting field
        + Members
            + lname
            + fname
            + dname
            + country
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return

+ Response 200 (application/json)

    + Attributes (Profiles collections)

+ Response 500
    Returned when a generic error occours.

    + Body

#######################
# Group DRAFT - Organization Units
#######################

## Organization Units collection [/ous{?page}{?sort}{?pageSize}]

+ Parameters
  + page: 1 (optional, number) - The page of results to return
  + sort: description (optional) - Sorting order
  + pageSize: 25 (optional, number) - Amount of results to return

+ Attributes (object)
  + results (array[OrganizationMini1, OrganizationMini2, OrganizationMini3], required) - array of revisions
  + Include PaginationData

### List Organization Units [GET]
Returns the Organization Units list.

**Released on Mar 21**

+ Response 200 (application/json)
  + Attributes (Organization Units collection)


## Organization Unit [/ous/{ouCode}]

### Organization Unit Update [PUT]

Update the name of an Organization Unit.

**Released on Mar 21**

+ Parameters
    + ouCode: XL1232 (required, string) - code of the ou

+ Request (application/json)
    + Attributes
        + ouCode: 2 (required, number) - code of the ou
        + ouName: new organization name (required, string) - the new name of the ou

+ Response 200 (application/json)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body


#######################
# Group Countries
#######################


## Countries collections [/countries]

+ Attributes (object)
  + results (array, required) - array of resources
      + (object)
          + id: 1
          + description: Italy
      + (object)
          + id: 2
          + description: Germany
      + (object)
          + id: 3
          + description: Austria
      + (object)
          + id: 4
          + description: Spain
  + Include PaginationData


### List countries [GET]

The list countries. (HR Admin - People insert, HR Admin - People modify)

+ Response 200 (application/json)
  + Attributes (Countries collections)


#######################
# Group General Messages
#######################

## General Messages [/generalMessages]

+ Attributes (object)
    + availabilityAlert (object)
        + firstRow: `first row alert` (string)
        + secondRow: `second row alert` (string)
    + newRelease (object)
        + firstRow: `first row release` (string)
        + secondRow: `second row release` (string)

### Read general messages [GET]
Get the general message.
+ Response 200 (application/json)
    + Attributes (General Messages)

### Update general messages [PUT]
Update the general message with a new one.
+ Request (application/json)
    + Attributes (General Messages)

+ Response 200

#######################
# Group Support Requests
#######################

## Support Requests Collection [/supportRequests{?page}{?pageSize}{?sort}{?sortOrder}{?viewAllAssignee}{?excludeClosed}]

+ Attributes (object)
  + results (array[SupportRequestClosedMini, SupportRequestOpenMini, SupportRequestAssignedMini, SupportRequestForcedMini], required)
  + Include PaginationData

### Support requests list [GET]

+ Parameters
    + page: 1 (optional, number) - The page of profiles to return
    + sort: requestDate (enum[string], optional) - Sorting field
        + Members
            + requestDate
            + assignmentDate
            + closureDate
            + status
    + sortOrder: asc (enum, optional) - Sorting order
        + Members
            + asc
            + desc
    + pageSize: 25 (optional, number) - Amount of results to return
    + viewAllAssignee: true (optional, boolean)
    + excludeClosed: false (optional, boolean)

+ Response 200 (application/json)
    + Attributes (Support Requests Collection)
    
+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body
    
### Create Support Request [POST]
Creates a new support request and adds the proper messages depending on the 'assign' and 'closure' field values

+ Request (application/json)

    + Attributes (SupportRequestNew)

+ Response 201 (application/json)

    + Headers

            Location: /supportRequests/2

    + Attributes (SupportRequestOpen)

+ Response 400
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## Support Request [/supportRequests/{id}]

+ Parameters
    + id: 1 (required, number) - id of the support request

### Read Support Request [GET]

+ Response 200 (application/json)

    + Attributes (SupportRequestClosed)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body
    
### Update Support Request [PUT]

+ Request (application/json)

    + Attributes (SupportRequestClosedUpdate)

+ Response 200

+ Response 400
    Returned when input does not pass validation.

    + Body

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body
    
### Delete Support Request  [DELETE]

+ Response 204

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

### Assign Support Request [PUT /supportRequests/{id}/assign]
Changes the status of the support request to 'Assigned' and adds a proper message
    
+ Request (application/json)
    + Attributes (object)
        + userId: `balessandro` (required, string) - id of the assignee profile

+ Response 200 (application/json)

    + Attributes (SupportRequestAssigned)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body
    
### Close Support Request [PUT /supportRequests/{id}/close]
Changes the status of the support request to 'Closed' and adds a proper message

+ Request (application/json)
    + Attributes (object)
        + reason: `Motivazione chiusura lorem ipsum` (required, string)

+ Response 200 (application/json)

    + Attributes (SupportRequestClosed)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body
    
### Forced closure Support Request [PUT /supportRequests/{id}/force]
Changes the status of the support request to 'Forced closure' and adds a proper message

+ Response 200 (application/json)

    + Attributes (SupportRequestForced)

+ Response 404
    Returned when the required resource cannot be found.

    + Body

+ Response 500
    Returned when a generic error occours.

    + Body

## DRAFT - Documents Modify [/supportRequests/{id}/document]
+ Parameters
    + id: 1 (required, number) - id of the request
    
+ Attributes (Support Request Document Upload)

### Support request Document Upload [PUT]
Allow you to upload a new document for a support request
+ Request (application/json)
    + Attributes (Support Request Document Upload)

+ Response 200 (application/json)
    + Attributes (object)
        + id: 1 (required, number) - the id of the request
        + documents (array) - the new array of documents
            + `http://url.doc.1`
            + `http://url.doc.2`
            + `http://url.doc.3`
            + `http://url.doc.4`


### Support request Document Remove [POST]
Allow you to remove a support request's document
+ Request (application/json)
    + Attributes (Support Request Document Remove)

+ Response 200 (application/json)
    + Attributes (object)
        + id: 1 (required, number) - the id of the request
        + documents (array) - the new array of documents
            + `http://url.doc.1`
            + `http://url.doc.2`


+ Response 200 


#######################
# Group DRAFT - Configuration
#######################

This returns the application configuration. 
We keep this here for now just for documentation purpose,
it shouldn't be part of the API.

## Configuration [/configuration]

+ Attributes (object)
    + baseUrl: `http://private-bc401d-ed2016.apiary-mock.com` (string)

### Base URL configuration [GET]
Get the base URL configuration

+ Response 200 (application/json)
    + Attributes (Configuration)






# Data Structures

## PaginationData (object)
+ paginationData (object, required) - Informations required for pagination
    + count: 62 (number,required) - total number of resources
    + pageNum: 1 (number, required) - slice of resources returned
    + pageSize: 25 (number, required) - size of the slice

## PaginationDataTree (object)
+ paginationData (object, required) - Informations required for pagination
    + count: 3 (number,required) - total number of resources
    + pageNum: 1 (number, required) - slice of resources returned
    + pageSize: 25 (number, required) - size of the slice

## ProfileBase (object)
+ id: 3 (number)
+ firstName: `MARIO` (required, string)
+ lastName: `BIANCHI` (required, string)
+ ouCode: `XL78481` (string)
+ ouDescr: `C-BOM` (string)
+ email: `mbianchi@acme.it` (required, string)
+ profession: `Senior Developer` (required, string)
+ isManager: `true`
+ phone (object)
    + country: 39
    + prefix: `011`
    + number: `12345678` (string)
+ mobilePhone (object)
    + country: `39`
    + prefix: `335`
    + number: `1234567` (string)
+ fax (object)
    + country: `39` (string)
    + prefix: `02` (string)
    + number: `3904912345678` (string)
+ businessUnit: `not used ?`,
+ jobResponsibility: `job responsibility`,
+ altInternetAddress: `firstname.lastname@organization2.com`
+ notesAddress: `indirizzo_notes@aaaaa.it`
+ userId: `userid` (string) - login user
+ otherRoles: `????` (string)
+ employeeType: `EMP` (string) - code of profile type
+ personalCode: `one more data` (required, string)
+ hiringDate: `2016-02-28` (string) - ignored on update

## ProfileMini (object)
+ firstName: `MARIO` (required, string)
+ lastName: `BIANCHI` (required, string)
+ email: `mbianchi@acme.it` (required, string)
+ addresses
    + business (ProfileAddressCountry) - business address of the user.
+ userId: `userid` (string) - login user
+ employeeType: `EMP` (required,string) - code of profile type
+ personalCode: `one more data` (required, string)
+ hiringDate: `2016-02-28` (required,string)

## ProfileMiniRes (object)
+ id: 123 (required, number)
+ firstName: `MARIO` (required, string)
+ lastName: `BIANCHI` (required, string)
+ email: `mbianchi@acme.it` (required, string)
+ addresses
    + business (ProfileAddressCountry) - business address of the user.
+ userId: `userid` (string) - login user
+ employeeType: `EMP` (required,string) - code of profile type
+ personalCode: `one more data` (required, string)
+ hiringDate: `2016-02-28` (required,string)

## ProfileDetail (ProfileBase)
+ Include ProfileInformations
+ Include ProfilesAddresses

## Profile1 (ProfileBase)
+ id: 1 (number) - id of the profile

## Profile2 (ProfileBase)
+ id: 2 (number) - id of the profile

## Profile3 (ProfileBase)
+ id: 3 (number) - id of the profile

## ProfileInformations (object)
+ informations
    + expertiseSummary: `expertise summary text`
    + certification: `certifications text`
    + generalExperienceBusiness: `business experience text`
    + generalExperienceIndustry: `industry experience text`
    + generalExperienceCustomer: `customer experience text`
    + technicalExperience: `industry experience text`
    + solutionsProducts: `solutions products text`
    + communities: `communities text`
    + businessGoals: `business goals text`
    + professionalOrganizations: `professional organizations text`
    + projects: `projects text`
    + team: `team text`

## ProfilesAddresses (object)
+ addresses
    + preferred (ProfileAddress) - preferred address of the user, if different from business address.
    + business (ProfileAddress) - business address of the user.

## ProfileAddress
+ street: Via Nizza 15
+ city: Torino
+ country: Italy
+ zip: 12345

## ProfileAddressCountry
+ country: Italy

## Organization1 (object)
+ ouCode:`XL9875`
+ ouName:`organization name 1`
+ people (array[Person1,Person2], optional)
+ parentId: `XL9875`

## Organization2 (object)
+ ouCode:`XL8654`
+ ouName:`organization name 2`
+ people (array[Person3], optional)
+ parentId: `XL9875`

## Organization3 (object)
+ ouCode:`XL9352`
+ ouName:`organization name 1`
+ people (array[Person4,Person5], optional)
+ parentId: `XL9875`

## OrganizationMini1 (object)
+ ouCode:`XL9875`
+ ouName:`organization name 1`

## OrganizationMini2 (object)
+ ouCode:`XL9352`
+ ouName:`organization name 1`

## OrganizationMini3 (object)
+ ouCode:`XL8654`
+ ouName:`organization name 1`

##Person1 (object)
+ id: 1 (required, number)
+ lastName: `Linzi` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: true (boolean)
+ isMainManager: true (boolean)


##Person2 (object)
+ id: 2 (required, number)
+ lastName: `Linzi` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: false (boolean)
+ isMainManager: false (boolean)

##Person3 (object)
+ id: 3 (required, number)
+ lastName: `Signori` (required, string)
+ firstName: `Marco` (required, string)
+ isManager: true (boolean)
+ isMainManager: false (boolean)

##Person4 (object)
+ id: 4 (required, number)
+ lastName: `Moretto` (required, string)
+ firstName: `Alberto` (required, string)
+ isManager: true (boolean)
+ isMainManager: true (boolean)


##Person5 (object)
+ id: 5 (required, number)
+ lastName: `Tessarolo` (required, string)
+ firstName: `Giovanni` (required, string)
+ isManager: false (boolean)
+ isMainManager: false (boolean)

##SupportRequestMessageAssigned (object)
+ id: 1 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:12:10` (required, string)
+ description: `This support request was assigned to Baggio Alessandro(bAlessandro@email.it)` (required, string)

##SupportRequestMessageClosed (object)
+ id: 2 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:14:10` (required, string)
+ description: `This support request was closed (Motivazione chiusura lorem ipsum)` (required, string)

##SupportRequestMessageForced (object)
+ id: 3 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:14:10` (required, string)
+ description: `This support request was forcefully closed` (required, string)

##SupportRequestMessageOpen (object)
+ id: 4 (required, number)
+ employeeProfile (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ date: `2015-12-10 12:10:10` (required, string)
+ description: `This support request was created` (required, string)

##SupportRequestNew (object)
+ status (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title (string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate (string)
+ closureReason (string)

##SupportRequestClosed (object)
+ id: 1 (required, number)
+ status: `Closed` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)
+ closureReason: `Motivazione chiusura lorem ipsum` (string)
+ messages (array[SupportRequestMessageOpen,SupportRequestMessageAssigned,SupportRequestMessageClosed]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestForced (object)
+ id: 4 (required, number)
+ status: `Forced closure` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)
+ closureReason (string)
+ messages (array[SupportRequestMessageOpen,SupportRequestMessageAssigned,SupportRequestMessageForced]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestClosedUpdate (object)
+ id: 1 (required, number)
+ status: `Closed` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)
+ closureReason: `Motivazione chiusura lorem ipsum` (string)

##SupportRequestOpen (object)
+ id: 2 (required, number)
+ status: `Open` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:2` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate (string)
+ employeeProfileAssignedTo (object)
+ closureDate (string)
+ closureReason (string)
+ messages (array[SupportRequestMessageOpen]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestAssigned (object)
+ id: 3 (required, number)
+ status: `Assigned` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestor (object)
    + lastName: `Baggio` (required, string)
    + firstName: `Alessandro` (required, string)
    + email: `bAlessandro@email.it` (required, string)
    + phoneNumber: `0000 000000` (string)
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ type: `EntDirectory` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:3` (required, string)
+ description: `Descrizione lorem ipsum` (required, string)
+ assignmentDate: `2015-12-10 12:12:10` (string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate (string)
+ closureReason (string)
+ messages (array[SupportRequestMessageOpen,SupportRequestMessageAssigned]) - Automatically created messages when the request status changes, refer to assign/close/forced req.

##SupportRequestClosedMini (object)
+ id: 1 (required, number)
+ status: `Closed` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)

##SupportRequestForcedMini (object)
+ id: 4 (required, number)
+ status: `Forced closure` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Forced closure`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:1` (required, string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate: `2015-12-10 12:14:10` (string)

##SupportRequestOpenMini (object)
+ id: 2 (required, number)
+ status: `Open` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:2` (required, string)
+ employeeProfileAssignedTo (object)
+ closureDate (string)

##SupportRequestAssignedMini (object)
+ id: 3 (required, number)
+ status: `Assigned` (enum[string],required)
        + Members
            + `Open`
            + `Assigned`
            + `Closed`
            + `Force closed`
+ requestDate: `2015-12-10 12:10:10` (required, string)
+ title: `ED Supp. Req. - Alessandro Baggio Ph:0000 000000 Id:3` (required, string)
+ employeeProfileAssignedTo (object)
    + id: 323 (number)
    + firstName: `Alessandro` (string)
    + lastName: `Baggio` (string)
    + email: `bAlessandro@email.it` (string)
    + userId: `balessandro` (string)
+ closureDate (string)

##Support Request Document Upload (object)
+ id: 1 (required, number) - id of the request that you wants to modify
+ document: `` (string) - base64 file to upload a document

##Support Request Document Remove (object)
+ id: 1 (required, number) - id of the request that you wants to modify
+ removeDocuments (array[string]) - array with documents to remove
    + `http://url.doc.3`

## SearchObject (object)
+ Include SearchQuery
+ orgType: UO (string, optional) - Structure type to filter for
+ page: 1 (optional, number) - The page of profiles to return
+ sort: fname (enum[string], optional) - Sorting field
    + Members
        + lname
        + fname
        + dname
        + country
+ sortOrder: asc (enum, optional) - Sorting order
    + Members
        + asc
        + desc
+ pageSize: 25 (optional, number) - Amount of results to return

## SearchQuery (object)
+ searchQuery (object, required)
    + and (array[AndQuery1, AndQuery2, AndQuery3, AndQuery4, AndQuery5, AndQuery6], required)

## AndQuery1 (object)
+ or (array[OrQuery1, OrQuery2])

## OrQuery1 (object)
+ id: 12

## OrQuery2 (object)
+ id: 32

# AndQuery2 (object)
+ lname: Rossi (string)


# AndQuery3 (object)
+ fname: Mario (string)


# AndQuery4 (object)
+ email: mrossi@ibm.it (string)


# AndQuery5 (object)
+ dcode: XL1231 (string)


# AndQuery6 (object)
+ dname: Austria CEO (string)

## RevisionMini (object)
  + description: Struttura 1 (string) - description of revision


## RevisionDetail (object)
  + id: 1 (required) - id of the revision 
  + orgtype: UO (string) - Organization type to filter for
  + description: Struttura 1 (string) - description of revision
  + startDate: `2015-06-30` (string) - start date for the revision
  + endDate: `` (string) - end date for the revision
  + status: `active` (enum[string]) - status of the revision
   + Members
        + active
        + expired
        + draft

## NewRevisionDetail (object)
  + id: 1 (required) - id of the revision 
  + orgtype: UO (string) - Organization type to filter for
  + description: Struttura 1 (string) - description of revision
  + startDate (string) - start date for the revision
  + endDate (string) - end date for the revision
  + status: `draft` (enum[string]) - status of the revision


## Revision1 (object)
+ id: 1
+ description:`Struttura 1`
+ startdate : `2016-03-01`
+ enddate : ``(string)
+ status : `active`

## Revision2 (object)
+ id: 2
+ description:`Struttura 2`
+ startdate : `` (string)
+ enddate : `` (string)
+ status : `draft`

## Revision3 (object)
+ id: 3
+ description:`Struttura 3`
+ startdate : `2015-06-30`
+ enddate : `2016-02-29`
+ status : `expired`